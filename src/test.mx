int GGG=22*33;
int f(int x){
	return x;
}
int main() {
  int a,b,c=1,d=1;
  a=b+c;
  b=a+d;
  return 0;
}


-------------irbuild finish-------------
; ModuleID = 'online_judge'
source_filename = "online_judge"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"



declare i1 @_str_ne(i8* %lhs,i8* %rhs)
declare i1 @_str_le(i8* %lhs,i8* %rhs)
declare i8* @_str_substring(i8* %str,i32 %left,i32 %right)
declare i8* @_str_concatenate(i8* %lhs,i8* %rhs)
declare i8* @getString()
declare i1 @_str_ge(i8* %lhs,i8* %rhs)
declare i1 @_str_lt(i8* %lhs,i8* %rhs)
declare i32 @getInt()
declare i32 @_str_length(i8* %str)
declare void @print(i8* %str_0)
declare void @println(i8* %str_0)
declare i32 @_str_ord(i8* %str,i32 %pos)
declare i8* @_f_malloc(i32 %n)
declare void @printInt(i32 %n_0)
declare void @printlnInt(i32 %n_0)
declare i8* @toString(i32 %i_0)
declare i32 @_str_parseInt(i8* %str)
declare i1 @_str_eq(i8* %lhs,i8* %rhs)
declare i1 @_str_gt(i8* %lhs,i8* %rhs)

define dso_local i32 @main() {
entrance_block0:
    %d_addr = alloca i32
    %c_addr = alloca i32
    %b_addr = alloca i32
    %a_addr = alloca i32
    %return_register_infunction_addr = alloca i32
    store i32 1, i32* %c_addr
    store i32 1, i32* %d_addr
    %b = load i32, i32* %b_addr
    %c = load i32, i32* %c_addr
    %add = add i32 %b, %c
    store i32 %add, i32* %a_addr
    %a = load i32, i32* %a_addr
    %d = load i32, i32* %d_addr
    %add_0 = add i32 %a, %d
    store i32 %add_0, i32* %b_addr
    store i32 0, i32* %return_register_infunction_addr
    %returnval = load i32, i32* %return_register_infunction_addr
    ret i32 %returnval
}